{"version":3,"sources":["reducers/searchServices.js","components/ServiceList/FilterServices.jsx","components/ServiceList/LoadingSpinner.jsx","components/ServiceForm/ServiceForm.jsx","components/Buttons/RetryButton.jsx","components/ServiceList/ErrorPopup.jsx","lib/getResponse.js","reducers/serviceList.js","reducers/editService.js","components/ServiceForm/EditServiceForm.jsx","reducers/addService.js","components/ServiceForm/AddServiceForm.jsx","components/Modal/Modal.jsx","hooks/useOnClickOutside.js","components/ServiceList/ServiceList.jsx","App.jsx","epics/index.js","store/index.js","index.js"],"names":["searchServicesSlice","createSlice","name","initialState","searchField","foundServices","loading","error","reducers","changeSearchField","state","payload","searchServicesRequest","searchServicesSuccess","actions","searchServicesReducer","reducer","FilterServices","dispatch","useDispatch","useSelector","searchServices","className","type","onChange","value","target","placeholder","LoadingSpinner","radius","width","color","length","viewBox","cx","cy","r","fill","strokeWidth","stroke","ServiceForm","onInputChange","isLoading","onFormSubmit","formData","service","onSubmit","e","preventDefault","label","inputValue","price","content","FormInput","RetryButton","onClick","ErrorPopup","message","onRetry","getResponse","a","url","method","data","fetch","body","JSON","stringify","response","ok","Error","statusText","json","serviceListSlice","services","addService","id","newService","Number","push","getServicesRequest","getServicesSuccess","getServicesFailure","removeServiceSuccess","filter","editService","serviceIndex","findIndex","serviceListReducer","editServiceAsync","createAsyncThunk","history","rejectWithValue","process","resetEditForm","editServiceSlice","getServiceRequest","getServiceSuccess","getServiceFailure","changeEditServiceField","editServiceReducer","EditServiceForm","useHistory","useEffect","console","log","addServiceAsync","addServiceSlice","changeAddServiceField","addServiceReducer","AddServiceForm","AddServiceModal","isOpen","EditServiceModal","match","params","Modal","children","ref","useRef","onClose","handler","listener","element","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","ServiceList","map","i","key","ServiceItem","to","removeService","createAction","Button","App","serviceList","exact","path","component","rootEpic","combineEpics","action$","pipe","ofType","o","trim","debounceTime","URLSearchParams","q","switchMap","ajax","getJSON","_","catchError","of","delete","epicMiddleware","createEpicMiddleware","store","configureStore","middleware","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c856232a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  searchField: '',\n  foundServices: null,\n  loading: false,\n  error: null,\n};\n\nexport const searchServicesSlice = createSlice({\n  name: 'searchServices',\n  initialState,\n  reducers: {\n    changeSearchField: (state, { payload }) => {\n      if (!payload) {\n        state.searchField = '';\n        state.foundServices = null;\n      }\n      state.searchField = payload;\n    },\n    searchServicesRequest: () => {\n      // nothing\n    },\n    searchServicesSuccess: (state, { payload }) => {\n      state.foundServices = payload;\n    },\n  },\n});\n\nexport const {\n  changeSearchField,\n  searchServicesRequest,\n  searchServicesSuccess,\n} = searchServicesSlice.actions;\n\nexport const searchServicesReducer = searchServicesSlice.reducer;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeSearchField } from '../../reducers/searchServices';\n\nexport const FilterServices = () => {\n  const dispatch = useDispatch();\n\n  const { searchField } = useSelector((state) => state.searchServices);\n\n  const onChange = ({ target: { value } }) => {\n    dispatch(changeSearchField(value));\n  };\n\n  return (\n    <div className=\"filter-services\">\n      <label className=\"filter-services_label\">\n        <span className=\"filter-services_text\">Search</span>\n        <input\n          type=\"text\"\n          className=\"filter-services_input\"\n          onChange={onChange}\n          value={searchField}\n          placeholder=\"Type something to search...\"\n        />\n      </label>\n    </div>\n  );\n};\n","export const LoadingSpinner = ({ radius, width, color }) => {\n  // radius и width работают совсем не так, как мне нужно было, но оставлю так\n  const length = radius * 2.5;\n\n  return (\n    <svg className=\"loading-spinner\" viewBox={`0 0 ${length} ${length}`}>\n      <circle\n        className=\"path\"\n        cx={length / 2}\n        cy={length / 2}\n        r={radius}\n        fill=\"none\"\n        strokeWidth={width}\n        stroke={color}\n      ></circle>\n    </svg>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { LoadingSpinner } from '../ServiceList/LoadingSpinner';\n\nexport const ServiceForm = ({\n  type,\n  onInputChange,\n  onFormSubmit,\n  isLoading,\n}) => {\n  const formData = useSelector((state) => state[`${type}Service`].service);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // onFormSubmit(formData);\n  };\n\n  return (\n    <div className=\"form_container\">\n      {isLoading && (\n        <div className=\"loading_wrapper\">\n          <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n        </div>\n      )}\n      <form onSubmit={onSubmit} className=\"add-service_form\">\n        <FormInput\n          label=\"Name\"\n          name=\"name\"\n          inputValue={formData.name}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <FormInput\n          label=\"Price\"\n          name=\"price\"\n          inputValue={formData.price}\n          onInputChange={onInputChange}\n          type=\"number\"\n        />\n        <FormInput\n          label=\"Description\"\n          name=\"content\"\n          inputValue={formData.content}\n          onInputChange={onInputChange}\n          type=\"text\"\n        />\n        <button type=\"submit\" className=\"form_submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst FormInput = ({ name, label, inputValue, onInputChange, type }) => {\n  const onChange = ({ target: { value } }) => {\n    // для цены, костыль на скорую руку\n    const inputValue = type === 'number' ? +value : value;\n    onInputChange(name, inputValue);\n  };\n\n  return (\n    <label className=\"form_label\">\n      <span className=\"form_label_text\">{label}</span>\n      <input\n        onChange={onChange}\n        className=\"form_input\"\n        value={inputValue}\n        type={type}\n      />\n    </label>\n  );\n};\n","export const RetryButton = ({ onClick }) => {\n  return (\n    <button className=\"retry-btn\" onClick={onClick}>\n      Repeat request\n    </button>\n  );\n};\n","import { RetryButton } from '../Buttons/RetryButton';\n\nexport const ErrorPopup = ({ message, onRetry }) => {\n  return (\n    <div className=\"error-message\">\n      {message}\n      {onRetry && <RetryButton onClick={onRetry} />}\n    </div>\n  );\n};\n","export async function getResponse({ url, method, data }) {\n  const response = await fetch(url, {\n    method,\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  services: [],\n  loading: false,\n  error: null,\n};\n\nexport const serviceListSlice = createSlice({\n  name: 'serviceList',\n  initialState,\n  reducers: {\n    addService: (state, { payload }) => {\n      const { id, name, price, content } = payload;\n      const newService = { id, name, price: Number(price), content };\n      state.services.push(newService);\n    },\n    getServicesRequest: (state, { payload }) => {\n      state.loading = true;\n      state.error = null;\n    },\n    getServicesSuccess: (state, { payload }) => {\n      state.services = payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getServicesFailure: (state, { payload }) => {\n      state.error = payload;\n      state.loading = false;\n    },\n    removeServiceSuccess: (state, { payload }) => {\n      state.services = state.services.filter(\n        (service) => service.id !== payload,\n      );\n    },\n    editService: (state, { payload }) => {\n      const serviceIndex = state.services.findIndex(\n        (service) => service.id === payload.id,\n      );\n      state.services[serviceIndex] = payload;\n    },\n  },\n});\n\nexport const {\n  addService,\n  editService,\n  getServicesSuccess,\n  getServicesRequest,\n  getServicesFailure,\n  removeServiceSuccess,\n} = serviceListSlice.actions;\n\nexport const serviceListReducer = serviceListSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { getResponse } from '../lib/getResponse';\nimport { editService } from './serviceList';\n\nconst initialState = {\n  service: {\n    id: '',\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const editServiceAsync = createAsyncThunk(\n  'editService/fetchEditService',\n  async ({ service, history }, { dispatch, rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: `${process.env.REACT_APP_API_SERVICES}/${service.id}?fortune`,\n        method: 'PUT',\n        data: service,\n      });\n      dispatch(editService(data));\n      dispatch(resetEditForm());\n      history.push(process.env.REACT_APP_HOMEPAGE);\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const editServiceSlice = createSlice({\n  name: 'editService',\n  initialState,\n  reducers: {\n    getServiceRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    getServiceSuccess: (state, { payload }) => {\n      state.service = payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getServiceFailure: (state, { payload }) => {\n      state.error = payload;\n      state.loading = false;\n    },\n    changeEditServiceField: (state, { payload }) => {\n      const { name, value } = payload;\n      state.service[name] = value;\n    },\n    resetEditForm: (state) => {\n      state.service = initialState.service;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  getServiceRequest,\n  getServiceSuccess,\n  getServiceFailure,\n  changeEditServiceField,\n  resetEditForm,\n} = editServiceSlice.actions;\n\nexport const editServiceReducer = editServiceSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nimport {\n  changeEditServiceField,\n  editServiceAsync,\n  getServiceRequest,\n} from '../../reducers/editService';\n\nexport const EditServiceForm = ({ id }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, error } = useSelector((state) => state.editService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeEditServiceField({ name, value }));\n  };\n\n  const onFormSubmit = ({ id, name, price, content }) => {\n    if (name && price && content) {\n      dispatch(\n        editServiceAsync({ service: { id, name, price, content }, history }),\n      );\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  const onRetry = () => {\n    dispatch(getServiceRequest(id));\n  };\n\n  useEffect(() => {\n    dispatch(getServiceRequest(id));\n  }, []);\n\n  return (\n    <>\n      <ServiceForm\n        type=\"edit\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} onRetry={onRetry} />}\n    </>\n  );\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { getResponse } from '../lib/getResponse';\nimport { addService } from './serviceList';\nimport { resetEditForm } from './editService';\n\nconst initialState = {\n  service: {\n    name: '',\n    price: '',\n    content: '',\n  },\n  loading: false,\n  error: null,\n};\n\nexport const addServiceAsync = createAsyncThunk(\n  'addService/fetchAddService',\n  async ({ service, history }, { dispatch, rejectWithValue }) => {\n    try {\n      const data = await getResponse({\n        url: `${process.env.REACT_APP_API_SERVICES}`,\n        method: 'POST',\n        data: service,\n      });\n      dispatch(addService(data));\n      dispatch(resetEditForm());\n      history.push(process.env.REACT_APP_HOMEPAGE);\n      return data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  },\n);\n\nexport const addServiceSlice = createSlice({\n  name: 'addService',\n  initialState,\n  reducers: {\n    changeAddServiceField: (state, { payload }) => {\n      const { name, value } = payload;\n      state.service[name] = value;\n    },\n  },\n  // extraReducers: {\n  //   [addServiceAsync.pending]: (state) => {\n  //     state.loading = true;\n  //     state.error = null;\n  //   },\n  //   [addServiceAsync.fulfilled]: (state) => {\n  //     state.service = initialState.service;\n  //     state.loading = false;\n  //     state.error = null;\n  //   },\n  //   [addServiceAsync.rejected]: (state, { payload }) => {\n  //     state.error = payload;\n  //     state.loading = false;\n  //   },\n  // },\n});\n\nexport const { changeAddServiceField } = addServiceSlice.actions;\n\nexport const addServiceReducer = addServiceSlice.reducer;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { ServiceForm } from './ServiceForm';\nimport { ErrorPopup } from '../ServiceList/ErrorPopup';\n\nimport {\n  addServiceAsync,\n  changeAddServiceField,\n} from '../../reducers/addService';\n\nexport const AddServiceForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { loading, error } = useSelector((state) => state.addService);\n\n  const onInputChange = (name, value) => {\n    dispatch(changeAddServiceField({ name, value }));\n  };\n\n  const onFormSubmit = ({ name, price, content }) => {\n    if (name && price && content) {\n      dispatch(addServiceAsync({ service: { name, price, content }, history }));\n    } else {\n      console.log('Тут должна быть какая-нибудь модалка или попап');\n    }\n  };\n\n  return (\n    <>\n      <ServiceForm\n        type=\"add\"\n        onInputChange={onInputChange}\n        onFormSubmit={onFormSubmit}\n        isLoading={loading}\n      />\n      {error && <ErrorPopup message={error} />}\n    </>\n  );\n};\n","import { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\n\nimport { EditServiceForm } from '../ServiceForm/EditServiceForm';\nimport { AddServiceForm } from '../ServiceForm/AddServiceForm';\n\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { resetEditForm } from '../../reducers/editService';\n\nexport const AddServiceModal = () => {\n  return (\n    <Modal isOpen>\n      <AddServiceForm />\n    </Modal>\n  );\n};\n\nexport const EditServiceModal = ({ match }) => {\n  return (\n    <Modal isOpen>\n      <EditServiceForm id={match.params.id} />\n    </Modal>\n  );\n};\n\nexport const Modal = ({ children, isOpen }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const ref = useRef();\n\n  const onClose = () => {\n    // наверное, костыльно диспатчить это в модалке в отрыве от самой формы\n    dispatch(resetEditForm());\n    history.push(process.env.REACT_APP_HOMEPAGE);\n  };\n\n  useOnClickOutside(ref, onClose);\n\n  return (\n    isOpen && (\n      <div className=\"modal_wrapper\">\n        <div className=\"modal\" ref={ref}>\n          <button className=\"modal_close-btn\" onClick={onClose}>\n            ×\n          </button>\n          {children}\n        </div>\n      </div>\n    )\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOnClickOutside = (ref, handler) => {\n  // позаимствованный хук\n  useEffect(() => {\n    const listener = (e) => {\n      const element = ref.current;\n      if (!element || element.contains(e.target)) {\n        return;\n      }\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [handler, ref]);\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nexport const ServiceList = ({ services }) => {\n  return (\n    <ul className=\"service-list\">\n      {services.map((service, i) => (\n        <ServiceItem {...service} key={i} />\n      ))}\n    </ul>\n  );\n};\n\nconst ServiceItem = ({ name, price, id }) => {\n  const dispatch = useDispatch();\n\n  const onRemove = () => {\n    const removeService = createAction('serviceList/removeService');\n    dispatch(removeService(id));\n  };\n\n  return (\n    <li className=\"service-item\">\n      <div className=\"service-item_info\">\n        <div className=\"service-item_name\">{name}</div>\n        <div className=\"service-item_price\">{price} ₽</div>\n      </div>\n      <div className=\"service-item_controls\">\n        <Link to={`${process.env.REACT_APP_HOMEPAGE}/${id}`}>\n          <Button label=\"Edit\" />\n        </Link>\n        <Button onClick={onRemove} label=\"Remove\" />\n      </div>\n    </li>\n  );\n};\n\nconst Button = ({ onClick, label }) => {\n  return (\n    <button onClick={onClick} className=\"service-item_btn\">\n      {label}\n    </button>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Link,\n  Switch,\n} from 'react-router-dom';\n\nimport { FilterServices } from './components/ServiceList/FilterServices';\nimport { AddServiceModal, EditServiceModal } from './components/Modal/Modal';\nimport { ServiceList } from './components/ServiceList/ServiceList';\nimport { LoadingSpinner } from './components/ServiceList/LoadingSpinner';\nimport { ErrorPopup } from './components/ServiceList/ErrorPopup';\n\nimport { getServicesRequest } from './reducers/serviceList';\n\nimport './styles/app.css';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  const { services, loading, error } = useSelector(\n    (state) => state.serviceList,\n  );\n  const { foundServices } = useSelector((state) => state.searchServices);\n\n  const onRetry = () => {\n    dispatch(getServicesRequest());\n  };\n\n  useEffect(() => {\n    dispatch(getServicesRequest());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Route exact path={['/']}>\n        <Redirect to={process.env.REACT_APP_HOMEPAGE} />\n      </Route>\n      {loading ? (\n        <LoadingSpinner radius=\"20\" width=\"5\" color=\"rgb(210, 70, 75)\" />\n      ) : error ? (\n        <ErrorPopup message={error} onRetry={onRetry} />\n      ) : (\n        <div className=\"services-app\">\n          <Link\n            to={`${process.env.REACT_APP_HOMEPAGE}/add`}\n            className=\"add-service_link\"\n          >\n            <button className=\"add-service_btn\">Add new service</button>\n          </Link>\n          <FilterServices />\n          <ServiceList services={foundServices || services} />\n          <Switch>\n            <Route\n              path={`${process.env.REACT_APP_HOMEPAGE}/add`}\n              component={AddServiceModal}\n            ></Route>\n            <Route\n              path={`${process.env.REACT_APP_HOMEPAGE}/:id`}\n              component={EditServiceModal}\n            ></Route>\n          </Switch>\n        </div>\n      )}\n    </Router>\n  );\n};\n","import { combineEpics, ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { ajax } from 'rxjs/ajax';\nimport {\n  map,\n  filter,\n  debounceTime,\n  switchMap,\n  catchError,\n} from 'rxjs/operators';\n\nimport { getServiceFailure, getServiceSuccess } from '../reducers/editService';\n\nimport {\n  searchServicesSuccess,\n  searchServicesRequest,\n} from '../reducers/searchServices';\n\nimport {\n  getServicesFailure,\n  getServicesSuccess,\n  removeServiceSuccess,\n} from '../reducers/serviceList';\n\nexport const getServicesEpic = (action$) =>\n  action$.pipe(\n    ofType('serviceList/getServicesRequest'),\n    switchMap((_) =>\n      ajax.getJSON(`${process.env.REACT_APP_API_SERVICES}?fortune`).pipe(\n        map((o) => getServicesSuccess(o)),\n        catchError((e) => of(getServicesFailure(e.message))),\n      ),\n    ),\n  );\n\nexport const removeServiceEpic = (action$) =>\n  action$.pipe(\n    ofType('serviceList/removeService'),\n    map((o) => o.payload),\n    switchMap((id) =>\n      ajax\n        .delete(`${process.env.REACT_APP_API_SERVICES}/${id}`)\n        .pipe(map(() => id)),\n    ),\n    map((id) => removeServiceSuccess(id)),\n  );\n\nexport const getServiceEpic = (action$) =>\n  action$.pipe(\n    ofType('editService/getServiceRequest'),\n    map((o) => o.payload),\n    switchMap((o) =>\n      ajax.getJSON(`${process.env.REACT_APP_API_SERVICES}/${o}?fortune`).pipe(\n        map((o) => getServiceSuccess(o)),\n        catchError((e) => of(getServiceFailure(e.message))),\n      ),\n    ),\n  );\n\nexport const changeSearchEpic = (action$) =>\n  action$.pipe(\n    ofType('searchServices/changeSearchField'),\n    map((o) => o.payload.trim()),\n    filter((o) => o !== ''),\n    debounceTime(600),\n    map((o) => searchServicesRequest(o)),\n  );\n\nexport const searchServicesEpic = (action$) =>\n  action$.pipe(\n    ofType('searchServices/searchServicesRequest'),\n    map((o) => o.payload),\n    map((o) => new URLSearchParams({ q: o })),\n    switchMap((o) =>\n      ajax\n        .getJSON(`${process.env.REACT_APP_SEARCH_URL}?${o}`)\n        .pipe(map((o) => searchServicesSuccess(o))),\n    ),\n  );\n\nexport const rootEpic = combineEpics(\n  changeSearchEpic,\n  searchServicesEpic,\n  getServicesEpic,\n  removeServiceEpic,\n  getServiceEpic,\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\n\nimport { serviceListReducer } from '../reducers/serviceList';\nimport { addServiceReducer } from '../reducers/addService';\nimport { editServiceReducer } from '../reducers/editService';\n\nimport { rootEpic } from '../epics';\nimport { searchServicesReducer } from '../reducers/searchServices';\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport const store = configureStore({\n  reducer: {\n    serviceList: serviceListReducer,\n    addService: addServiceReducer,\n    editService: editServiceReducer,\n    searchServices: searchServicesReducer,\n  },\n  middleware: [epicMiddleware],\n});\n\nepicMiddleware.run(rootEpic);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}